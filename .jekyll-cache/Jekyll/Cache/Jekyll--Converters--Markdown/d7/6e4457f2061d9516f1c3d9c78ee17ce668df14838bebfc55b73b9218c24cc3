I"|<ul>
  <li><strong>Title</strong>: #26 Remove Duplicates from Sorted Array</li>
  <li><strong>Diffculity</strong>: Easy</li>
  <li><strong>Description</strong>: Given a sorted array nums, remove the duplicates in-place such that each element appear only once and return the new length. Do not allocate extra space for another array, you must do this by modifying the input array in-place with <script type="math/tex">O(1)</script> extra memory.</li>
  <li><strong>Explanation</strong>: 先宣告1個指標(<script type="math/tex">j=0</script>)，以迴圈指標(<script type="math/tex">i=1</script>)開始遍歷排序給定陣列，當<script type="math/tex">(nums[i]!=nums[j])</script>時比較。題目限制in-place且no extra memory。因此在remove duplicates時，當前指標值會取代/寫入指向前一筆+1的指標的值。</li>
</ul>

<p>Solution-1:</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">Solution</span><span class="p">:</span>
    <span class="k">def</span> <span class="nf">removeDuplicates</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">nums</span><span class="p">:</span> <span class="n">List</span><span class="p">[</span><span class="nb">int</span><span class="p">])</span> <span class="o">-&gt;</span> <span class="nb">int</span><span class="p">:</span>
        <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span>
        <span class="k">for</span> <span class="n">j</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">nums</span><span class="p">)):</span>
            <span class="k">if</span> <span class="n">nums</span><span class="p">[</span><span class="n">j</span><span class="p">]</span> <span class="o">!=</span> <span class="n">nums</span><span class="p">[</span><span class="n">i</span><span class="p">]:</span>
                <span class="n">i</span><span class="o">+=</span><span class="mi">1</span>
                <span class="n">nums</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">nums</span><span class="p">[</span><span class="n">j</span><span class="p">]</span>
        <span class="k">return</span> <span class="n">i</span> <span class="o">+</span> <span class="mi">1</span>
    <span class="k">break</span>
</code></pre></div></div>
<ul>
  <li>Time&amp;Space Complexity: <script type="math/tex">O(n), O(1)</script></li>
</ul>

<p>Solution-2:</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">Solution</span><span class="p">:</span>
    <span class="k">def</span> <span class="nf">removeDuplicates</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">nums</span><span class="p">:</span> <span class="n">List</span><span class="p">[</span><span class="nb">int</span><span class="p">])</span> <span class="o">-&gt;</span> <span class="nb">int</span><span class="p">:</span>
        <span class="n">a</span> <span class="o">=</span> <span class="nb">list</span><span class="p">(</span><span class="nb">set</span><span class="p">(</span><span class="n">nums</span><span class="p">))</span>
        <span class="n">nums</span> <span class="o">=</span> <span class="n">a</span><span class="o">.</span><span class="n">copy</span><span class="p">()</span>
        <span class="k">return</span> <span class="nb">len</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>
</code></pre></div></div>
<ul>
  <li>Time&amp;Space Complexity: <script type="math/tex">O(?), O(?)</script>
<em>I will figure it out the complexity in solution 2.</em></li>
</ul>
:ET